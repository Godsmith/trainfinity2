from typing import Generator, List, Tuple, Union

def dot(vec1: Union[List, Tuple], vec2: Union[List, Tuple]) -> Union[float, int]: ...
def sample_vector(dimensions: int, seed: int) -> List[float]: ...
def fade(given_value: float) -> float: ...
def hasher(coors: Tuple[int]) -> int: ...
def product(iterable: Union[List, Tuple]) -> float: ...
def each_with_each(arrays: List[Tuple[int, int]], prev=...) -> Generator[Tuple[int], None, None]: ...
